/* ========================================================================== */
/* 基础配置与全局样式 (Base & Global Styles) */
/* ========================================================================== */
/**
* 此区域定义了应用的全局 CSS 自定义属性（变量）、基础重置和 body 默认样式。
* CSS 变量统一管理颜色、尺寸、字体等，便于主题切换和维护。
*/

:root {
    /* --- 全局颜色与主题变量 --- */
    --primary-color: #0088cc; /* 主题色 */
    --primary-color-dark: #0077b3; /* 主题色深色，用于悬停状态 */
    --secondary-color: #f5f5f5; /* 次要颜色，用于浅灰色背景 */
    --text-color: #212121; /* 主要文本颜色 */
    --text-color-light: #757575; /* 次要文本颜色 */
    --text-color-inverted: #ffffff; /* 反色文本，用于深色背景 */
    --accent-color: #4caf50; /* 强调色，用于在线、成功状态 */
    --danger-color: #f44336; /* 危险色，用于错误、删除状态 */
    --warning-color: #ff9800; /* 警告色 */
    --border-color: #e0e0e0; /* 边框颜色 */
    --hover-bg-color: #f0f0f0; /* 悬停背景色 */
    --active-bg-color: #e0e0e0; /* 激活背景色 */
    --sent-bg-color: #e1ffc7; /* 已发送消息背景色 */
    --received-bg-color: #ffffff; /* 已接收消息背景色 */
    --info-color: #2196F3; /* 信息性颜色，可以用于默认状态或一般提示 */


    /* --- 布局与尺寸变量 --- */
    --sidebar-width: 320px;
    --details-panel-width: 320px;
    --header-height: 60px;
    --input-area-height: auto; /* 由内容动态调整 */
    --spacing-1: 4px; /* 最小间距单元 */
    --spacing-2: 8px;
    --spacing-3: 12px;
    --spacing-4: 16px;
    --spacing-5: 20px;

    /* --- 通用样式变量 --- */
    --border-radius: 8px;
    --border-radius-small: 4px; /* 新增，用于更小的圆角 */
    --font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif;
    --box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);

    /* --- 特殊联系人/角色主题变量 --- */
    --special-contact-generic-color: #7e57c2; /* 通用特殊联系人颜色 (紫色) */

    /* 以下变量将由特定角色类（如 .AI_CharacterName）覆盖，提供主题化能力 */
    --character-primary-color: var(--special-contact-generic-color);
    --character-secondary-color: var(--active-bg-color);
    --character-avatar-bg: var(--special-contact-generic-color);
    --character-avatar-text-color: var(--text-color-inverted);
    --character-message-border-color: var(--character-primary-color);
    --character-message-bg-color: var(--received-bg-color);
    --character-message-sender-color: var(--character-primary-color);
    --character-details-name-color: var(--character-primary-color);
    --character-title-color: var(--character-primary-color);

    /* 音频质量指示器颜色 */
    --audio-quality-level-0-bg: #d9534f; /* 极低 - 红色系 */
    --audio-quality-level-1-bg: #f0ad4e; /* 较低 - 橙色系 */
    --audio-quality-level-2-bg: var(--info-color);   /* 标准 - 蓝色系 (或灰色 #777) */
    --audio-quality-level-3-bg: #5cb85c; /* 较高 - 绿色系 */
    --audio-quality-level-4-bg: #4CAF50; /* 极高 - 深绿色 */
}

* {
    /*
* 使用 border-box 盒模型，使元素的 width 和 height 包含 padding 和 border。
* 这是现代 CSS 布局的基石，能极大简化尺寸计算。
*/
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    /* Global transition removed for performance and specificity. Transitions added to individual components. */
}

html {
    /* 实现平滑滚动效果 */
    scroll-behavior: smooth;
}

body {
    display: flex;
    align-items: center;
    justify-content: center;
    height: 100vh;
    /* 防止在移动设备上视口高度变化时页面抖动 */
    height: 100dvh;
    overflow: hidden;
    color: var(--text-color);
    font-family: var(--font-family), serif;
    line-height: 1.6;
}

/* ========================================================================== */
/* 通用布局 (Layout) */
/* ========================================================================== */
/**
* 此区域定义了应用的主要布局结构，包括应用容器、侧边栏、主聊天区和详情面板。
*/

.app-container {
    display: flex;
    width: 100%;
    height: 90vh;
    height: 90dvh; /* Use dvh for dynamic viewport height */
    max-width: 1400px; /* Optional: max width for the app */
    max-height: 90dvh; /* Optional: max height for the app */
    overflow: hidden; /* Important for containing absolutely positioned children if needed */
    background-color: var(--received-bg-color);
    border-radius: var(--border-radius);
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
    position: relative; /* Make app-container the positioning context */
}

/* Basic structure for main layout panels - specific content styling in respective files */
.sidebar-nav {
    display: flex;
    flex-direction: column;
    flex-shrink: 0; /* 防止侧边栏在 flex 布局中被压缩 */
    width: var(--sidebar-width);
    background-color: #f8f9fa;
    /* 使用逻辑属性 border-inline-end，自动适应从左到右 (LTR) 和从右到左 (RTL) 的布局 */
    border-inline-end: 1px solid var(--border-color);
    position: relative;
    /* --- REMOVED (Performance) ---
    * 移除了 width 的过渡动画。改变 width 会导致整个页面布局在动画的每一帧都重新计算（重排），
    * 是性能开销极大的操作。侧边栏的显示/隐藏应使用 transform 来实现，以获得流畅体验。
    * transition: width 0.3s ease-in-out;
    */
}

.chat-area {
    position: relative;
    display: flex;
    flex-direction: column;
    flex-grow: 1; /* 占据剩余空间 */
    background-color: #e5ddd5;
}

.details-panel {
    display: none; /* 默认隐藏，由 JS 或媒体查询控制显示 */
    flex-direction: column;
    flex-shrink: 0;
    width: var(--details-panel-width);
    min-width: var(--details-panel-width);
    background-color: #f8f9fa;
    border-inline-start: 1px solid var(--border-color);
    /* Transition for sliding is handled in details-panel.css */
}


/* ========================================================================== */
/* 可复用组件 (Components) - Common Base Styles */
/* ========================================================================== */

/* --- 通用头部区域样式 --- */
.sidebar-header,
.chat-header-main,
.details-header {
    display: flex;
    align-items: center;
    height: var(--header-height);
    min-height: var(--header-height);
    padding-inline: var(--spacing-4); /* 使用逻辑属性 padding-inline 替代 padding-left/right */
    border-bottom: 1px solid var(--border-color);
}

/* --- 按钮 --- */
.btn {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    padding: var(--spacing-2) var(--spacing-4);
    border: none;
    border-radius: var(--border-radius);
    cursor: pointer;
    text-align: center;
    font-size: 14px;
    font-weight: 500;
    margin: 4px;
    transition: background-color 0.2s ease-out, color 0.2s ease-out, box-shadow 0.2s ease-out, opacity 0.2s ease-out;
}

.btn-primary,
.btn.btn-action-themed {
    background-color: var(--primary-color);
    color: var(--text-color-inverted);
}

.btn-secondary,
.btn-danger,
.btn-success {
    color: var(--text-color-inverted);
}

.btn-secondary {
    background-color: #6c757d;
}

.btn-danger {
    background-color: var(--danger-color);
}

.btn-success {
    background-color: var(--accent-color);
}

.menu-btn,
.back-to-list-btn,
.header-action-btn { /* Base for header action buttons */
    border: none;
    background: none;
    cursor: pointer;
    color: var(--text-color-light);
    transition: color 0.2s ease-out, background-color 0.2s ease-out;
}

.menu-btn { /* Specifics for main menu button */
    padding: var(--spacing-2);
    margin-inline-end: var(--spacing-2);
    font-size: 24px;
}

.header-action-btn { /* Base for right-side header action buttons */
    padding: var(--spacing-2);
    font-size: 20px;
}


.icon-btn {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 40px;
    height: 40px;
    margin-inline: 2px;
    padding: var(--spacing-2);
    border: none;
    border-radius: 50%;
    background: none;
    cursor: pointer;
    color: var(--text-color-light);
    font-size: 22px;
    transition: background-color 0.2s ease-out, color 0.2s ease-out;
}

/* --- 输入框与表单 (Common input styles) --- */
/* Search bar used in sidebar & details, messageInput in chat area, so keep base here if very common */
.search-bar { /* Common for chatSearchInput and resourceSearchInputDetailsPanel */
    border: 1px solid var(--border-color);
    border-radius: 20px;
    background-color: var(--received-bg-color);
    flex-grow: 1;
    padding: var(--spacing-2) var(--spacing-3);
    font-size: 14px;
    transition: border-color 0.2s ease-out, box-shadow 0.2s ease-out;
}

#fileInput,
#bgImageInput,
#bgImageInputLight,
#bgImageInputDark {
    display: none;
}

/* --- 自定义选择框 (Custom Select) --- */
.custom-select {
    position: relative;
    flex-grow: 1; /* 在 flex 布局中占据可用空间 */
    min-width: 150px;
    border: 1px solid var(--border-color);
    border-radius: 4px;
    background-color: var(--received-bg-color);
    color: var(--text-color);
    font-family: var(--font-family), serif;
    user-select: none; /* 防止用户选择文本 */
    transition: border-color 0.2s ease-out, box-shadow 0.2s ease-out;
}

.custom-select .selected {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: var(--spacing-2) var(--spacing-3);
    cursor: pointer;
}

.custom-select .selected::after {
    /* 使用伪元素创建下拉箭头 */
    margin-inline-start: 5px;
    color: var(--text-color-light);
    content: '▼';
    font-size: 0.8em;
    transition: transform 0.25s ease-in-out;
}

.custom-select.open .selected::after {
    /* 当选择框打开时，旋转箭头 */
    transform: rotate(180deg);
}

.custom-select .options {
    position: absolute;
    z-index: 1010; /* 确保选项列表在其他内容之上 */
    inset-block-start: calc(100% + 5px); /* 定位在选择框下方，并留有间隙 */
    inset-inline-start: 0;
    inset-inline-end: 0;
    display: none; /* 默认隐藏 */
    max-height: 200px;
    overflow-y: auto;
    border: 1px solid var(--border-color);
    border-radius: var(--border-radius);
    background-color: var(--received-bg-color); /* 背景应为白色以承载选项 */
    box-shadow: var(--box-shadow);
    /* Transition for display: block/none is tricky; usually done with opacity/transform if animated appearance needed */
}

.custom-select.open .options {
    /* 当选择框打开时，显示选项列表 */
    display: block;
}

.custom-select .option {
    padding: var(--spacing-2) var(--spacing-3);
    cursor: pointer;
    transition: background-color 0.2s ease-out, color 0.2s ease-out;
}

.custom-select .option:hover {
    background-color: var(--primary-color);
    color: var(--text-color-inverted);
}

.custom-select .option.active-option {
    background-color: var(--hover-bg-color);
    font-weight: bold;
}

/* --- 头像 (Base Styling) --- */
.chat-list-avatar, /* Used in sidebar */
.chat-avatar-main, /* Used in chat header */
.details-avatar, /* Used in details panel */
.video-call-avatar { /* Used in modals/video call */
    display: flex;
    flex-shrink: 0;
    align-items: center;
    justify-content: center;
    overflow: hidden;
    border-radius: 50%;
    background-color: var(--primary-color); /* Default, can be overridden by character themes */
    color: var(--text-color-inverted);
    font-weight: bold;
    transition: background-color 0.3s ease-out, color 0.3s ease-out; /* For theme changes */
}

.avatar-image { /* Common for all avatar containers if an image is used */
    width: 100%;
    height: 100%;
    border-radius: 50%;
    object-fit: cover;
}

/* --- 模态框 (Modals) --- */
.modal-like {
    position: fixed;
    z-index: 1000;
    inset: 0;
    display: none; /* 默认隐藏，由 JS 控制 */
    align-items: center;
    justify-content: center;
    padding: var(--spacing-5);
    background-color: rgba(0, 0, 0, 0.5);
    overflow-y: auto; /* BUG FIX: 允许背景遮罩在模态框内容过高时滚动 */
    /* For fade-in/out of the modal backdrop and content */
    opacity: 0;
    visibility: hidden;
    transition: opacity 0.3s ease-in-out, visibility 0s linear 0.3s;
}
.modal-like:target, /* If using :target for display */
.modal-like[style*="display: flex"], /* If JS uses display: flex */
.modal-like[style*="display: block"]  /* If JS uses display: block */
{
    opacity: 1;
    visibility: visible;
    transition: opacity 0.3s ease-in-out, visibility 0s linear 0s;
}

.modal-content {
    position: relative;
    width: 100%;
    max-width: 500px;
    max-height: 90vh;
    padding: var(--spacing-5);
    border-radius: var(--border-radius);
    background-color: var(--received-bg-color);
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
    /* BUG FIX: 移除内部滚动，将其转移到 .modal-like，以防止裁剪绝对定位的子元素（如下拉菜单） */
    /* overflow-y: auto; */
    transform: scale(0.95);
    transition: transform 0.3s ease-out; /* For a slight scale-up effect */
}
.modal-like[style*="display: flex"] .modal-content,
.modal-like[style*="display: block"] .modal-content {
    transform: scale(1);
}


.modal-header {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding-bottom: 10px;
    margin-bottom: 15px;
    border-bottom: 1px solid var(--border-color);
}

.modal-header h2 {
    font-size: 20px;
}

.close-modal-btn { /* Also an .icon-btn, but specific modal context */
    padding: 0;
    border: none;
    background: none;
    cursor: pointer;
    color: var(--text-color-light);
    font-size: 24px;
    transition: color 0.2s ease-out; /* Already covered by .menu-btn base if using shared class */
}

.modal-footer {
    display: flex;
    justify-content: flex-end;
    gap: var(--spacing-3);
    padding-top: 20px;
    margin-top: 20px;
    border-top: 1px solid var(--border-color);
}

/* --- 模态框: 设置区域特定样式 --- */
.modal-body .settings-section {
    margin-bottom: var(--spacing-5);
}

.modal-body .settings-section > h3 {
    margin-bottom: var(--spacing-4);
    font-size: 16px;
    font-weight: 600;
}

.modal-body .settings-item {
    display: flex;
    align-items: center;
    justify-content: space-between;
    gap: var(--spacing-3);
    margin-bottom: var(--spacing-3);
    font-size: 14px;
}

/* MODIFIED: 增加设置项中控制按钮组的样式 */
.modal-body .settings-item .setting-control-group {
    display: flex;
    gap: var(--spacing-2);
}

.modal-body .settings-item label {
    flex-shrink: 0;
    font-weight: 500;
}

/* 特别为设置模态框中的标签设置对齐 */
#mainMenuModal .settings-item label { /* Specific to main menu modal */
    width: 110px; /* MODIFIED: 增加了宽度以容纳更长的标签文本 */
    text-align: end;
}

.modal-body .settings-item input[type="text"],
.modal-body .settings-item input[type="password"],
.modal-body .settings-item input[type="number"] {
    flex-grow: 1;
    min-width: 0;
}

/* 模态框内通用的表单元素样式 */
.modal-body input[type="text"],
.modal-body input[type="password"],
.modal-body input[type="number"],
.modal-body textarea {
    width: 100%;
    padding: var(--spacing-2);
    margin-bottom: 10px;
    border: 1px solid var(--border-color);
    border-radius: 4px;
    background-color: var(--received-bg-color); /* 使用白色背景以提高可读性 */
    transition: border-color 0.2s ease-out, box-shadow 0.2s ease-out;
}

.modal-body textarea {
    min-height: 80px;
}

/* Styling for "Advanced Options" within AI & API AppSettings in Main Menu Modal */
#mainMenuModal .settings-section .collapsible-content .collapsible-content > p {
    margin-bottom: var(--spacing-3);
    font-size: 0.9em;
    color: var(--text-color-light);
    line-height: 1.5;
}

#mainMenuModal .settings-section .collapsible-content .collapsible-content > .manual-connect-step {
    margin-bottom: var(--spacing-3);
}

#mainMenuMdal .settings-section .collapsible-content .collapsible-content > .manual-connect-step .btn {
    width: 100%; /* Make buttons full width */
    margin-bottom: var(--spacing-2); /* Space below each button if they stack or before next element */
}

#mainMenuModal .settings-section .collapsible-content .collapsible-content > .manual-connect-step .btn:last-child {
    margin-bottom: 0; /* Remove margin from the last button in a step */
}

#mainMenuModal .settings-section .collapsible-content .collapsible-content > .manual-connect-step textarea#modalSdpText {
    margin-bottom: var(--spacing-2);
}


/* --- 模态框: 加载与通话特定样式 --- */
.loading-overlay {
    position: fixed;
    z-index: 9999;
    inset: 0;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    background-color: rgba(0, 0, 0, 0.7);
    color: var(--text-color-inverted);
    opacity: 0; /* For fade-in */
    visibility: hidden;
    transition: opacity 0.3s ease-in-out, visibility 0s linear 0.3s;
}
.loading-overlay[style*="display: flex"] { /* Assuming JS controls display */
    opacity: 1;
    visibility: visible;
    transition-delay: 0s, 0s;
}


.loading-spinner { /* General loading spinner, also used in chat messages */
    width: 50px;
    height: 50px;
    margin-bottom: 20px;
    border: 5px solid #f3f3f3;
    border-top: 5px solid var(--primary-color);
    border-radius: 50%;
    animation: spin 1.5s linear infinite;
}

.loading-text {
    font-size: 18px;
    font-weight: 500;
}

#callingModal .modal-content, /* Specific modal */
.video-call-request .modal-content { /* Specific modal */
    text-align: center;
}

/* .video-call-avatar is already defined as a common component base */
#callingModal .video-call-avatar { /* Specific size for this modal */
    width: 80px;
    height: 80px;
    font-size: 50px;
}

.video-call-request .video-call-avatar { /* Specific size for this modal */
    width: 60px;
    height: 60px;
    font-size: 40px;
}

.video-call-request-buttons {
    display: flex;
    justify-content: space-around;
    margin-top: 20px;
}

/* --- 视频通话界面 --- */
.video-call-container-main {
    position: fixed;
    z-index: 1001;
    inset: 0;
    display: none; /* 由 JS 控制显示 */
    flex-direction: column;
    align-items: center;
    justify-content: center;
    background: rgba(0, 0, 0, 0.9);
    /* --- OPTIMIZED (Performance) ---
* 移除了 width, height, left, top 的过渡动画。这些属性会触发重排，性能开销极大。
* 画中画模式的切换由 .pip-mode 类独立控制，而窗口拖拽由 JS 实现，无需 CSS 过渡。
* 保留了对非布局属性的过渡。
*/
    transition: border-radius 0.3s ease-in-out, box-shadow 0.3s ease-in-out, border-color 0.3s ease-in-out;
}

.video-call-container-main .video-streams {
    position: relative;
    width: 100%;
    height: 100%;
    overflow: hidden;
}

.video-call-container-main #remoteVideo {
    width: 100%;
    height: 100%;
    background-color: #2c2c2c;
    object-fit: cover;
}

.video-call-container-main #localVideo {
    position: absolute;
    z-index: 2;
    inset-block-end: 80px;
    inset-inline-end: 20px;
    width: 120px;
    height: 180px;
    border: 2px solid var(--text-color-inverted);
    border-radius: var(--border-radius);
    background-color: #2c2c2c;
    object-fit: cover;
    transition: width 0.3s ease-in-out, height 0.3s ease-in-out,
    inset-block-end 0.3s ease-in-out, inset-inline-end 0.3s ease-in-out,
    opacity 0.3s ease-in-out;
}

.video-call-container-main .video-call-controls {
    position: absolute;
    inset-block-end: 20px;
    display: flex;
    gap: 15px;
    padding: 10px;
    border-radius: 25px;
    background-color: rgba(0, 0, 0, 0.3);
    transition: bottom 0.3s ease-in-out, padding 0.3s ease-in-out, gap 0.3s ease-in-out;
}

.video-call-button {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 50px;
    height: 50px;
    border: none;
    border-radius: 50%;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.3);
    cursor: pointer;
    font-size: 20px;
    transition: background-color 0.2s ease-out, color 0.2s ease-out,
    width 0.3s ease-in-out, height 0.3s ease-in-out, font-size 0.3s ease-in-out;
}

.video-call-button.end-call {
    background: var(--danger-color);
    color: var(--text-color-inverted);
}

.video-call-button.mute-audio,
.video-call-button.toggle-camera,
.video-call-button.audio-only,
.video-call-button.toggle-pip {
    background: var(--text-color-inverted);
    color: var(--text-color);
}

/* 音频质量指示器样式 */
.call-status-indicator {
    padding: 4px 8px;
    border-radius: var(--border-radius-small);
    font-size: 0.8em;
    color: var(--text-color-inverted);
    margin-left: 8px;
    background-color: rgba(0, 0, 0, 0.2);
    align-self: center;
    transition: background-color 0.3s ease, color 0.3s ease; /* 平滑过渡 */
}

/* 可以为每个等级定义不同的颜色，或使用范围类 */
.call-status-indicator.quality-level-0 { background-color: var(--audio-quality-level-0-bg); } /* 极低 */
.call-status-indicator.quality-level-1 { background-color: var(--audio-quality-level-1-bg); } /* 较低 */
.call-status-indicator.quality-level-2 { background-color: var(--audio-quality-level-2-bg); } /* 标准 */
.call-status-indicator.quality-level-3 { background-color: var(--audio-quality-level-3-bg); } /* 较高 */
.call-status-indicator.quality-level-4 { background-color: var(--audio-quality-level-4-bg); } /* 极高 */

/* 或者使用基于范围的类 (VideoCallUIManager 中使用了这种方法) */
.call-status-indicator.quality-high-range { background-color: var(--accent-color); }
.call-status-indicator.quality-medium-range { background-color: var(--info-color); }
.call-status-indicator.quality-low-range { background-color: var(--warning-color); }

/* --- 通知 --- */
.notification-container {
    position: fixed;
    z-index: 9999;
    inset-block-start: 20px;
    inset-inline-end: 20px;
    max-width: 350px;
}

.notification {
    display: flex;
    align-items: center;
    margin-bottom: 10px;
    padding: var(--spacing-4);
    border-radius: var(--border-radius);
    border-inline-start: 4px solid var(--primary-color);
    background: var(--received-bg-color);
    box-shadow: var(--box-shadow);
    animation: notification-in 0.3s ease-out; /* Entry animation */
    /* Transition for exit animation (when .notification-hide is added) */
    transition: transform 0.3s ease-in-out, opacity 0.3s ease-in-out;
}

.notification-icon {
    margin-inline-end: var(--spacing-3);
    font-size: 18px;
}

.notification-message {
    flex: 1;
    font-size: 14px;
    line-height: 1.4;
}

.notification-close {
    padding-inline: 5px;
    border: none;
    background: none;
    cursor: pointer;
    color: #999;
    font-size: 20px;
    transition: color 0.2s ease-out;
}
.notification-close:hover {
    color: var(--danger-color);
}


/* --- 开关切换 (Toggle Switch) --- */
.switch {
    position: relative;
    display: inline-block;
    width: 46px;
    height: 24px;
}

.switch input {
    width: 0;
    height: 0;
    opacity: 0;
}

.slider {
    position: absolute;
    inset: 0;
    border-radius: 24px;
    background-color: #ccc;
    cursor: pointer;
    transition: background-color 0.2s ease-out;
}

.slider::before {
    position: absolute;
    inset-block-end: 3px;
    inset-inline-start: 3px;
    width: 18px;
    height: 18px;
    border-radius: 50%;
    background-color: white;
    content: "";
    transition: transform 0.2s ease-out;
}

/* --- 可折叠区域 --- */
/* --- OPTIMIZED (Performance) ---
* 使用 display: grid 和 grid-template-rows 来实现高性能的折叠动画。
* 这避免了使用 max-height 进行动画，从而消除了重排（reflow）。
* 使用此方法需要确保 .collapsible-header 和 .collapsible-content 是直接的兄弟节点。
* 它们的父容器（未在CSS中明确选择，但为隐式存在）将成为网格容器。
* 如果HTML结构不同，可能需要添加一个wrapper div。
*/
.collapsible-container { /* 假设 .collapsible-header 和 .collapsible-content 在这个容器内 */
    display: grid;
    grid-template-rows: auto 0fr; /* 标题高度自适应，内容高度初始为0 */
}
.collapsible-header.active + .collapsible-content {
    /* 不再需要 .active + .collapsible-content 选择器来设置高度 */
}
.collapsible-container.active { /* JS需要将 .active 类添加到这个父容器上 */
    grid-template-rows: auto 1fr; /* 动画地将内容行扩展到其完整高度 */
}


.collapsible-header {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding-block: var(--spacing-2);
    margin-bottom: 10px;
    border-bottom: 1px solid var(--border-color);
    cursor: pointer;
    font-weight: 600;
    transition: color 0.2s ease-out, border-color 0.2s ease-out;
    grid-row: 1; /* 始终在第一行 */
    grid-column: 1; /* 始终在第一列 */
}

.collapsible-header .collapse-icon {
    margin-inline-start: 5px;
    font-size: 0.9em;
    transition: transform 0.25s ease-in-out;
}

.collapsible-content {
    overflow: hidden;
    /* --- REMOVED (Performance) ---
* 移除了 max-height 和相关过渡，因为动画现在由父容器的 grid-template-rows 处理。
* max-height: 0;
* transition: max-height ...
*/
    transition: opacity 0.3s ease-in-out; /* 可以保留 opacity 过渡以实现淡入淡出效果 */
    opacity: 0;
    grid-row: 2; /* 始终在第二行 */
    grid-column: 1; /* 始终在第一列 */
    min-height: 0; /* BUG FIX: 确保元素可以完全收缩到零高度 */
}

.collapsible-container.active .collapsible-content {
    opacity: 1;
}


/* --- 截图编辑器模态框样式 (Core, as it's a modal-like overlay) --- */
.screenshot-editor-modal {
    background-color: rgba(30, 30, 30, 0.9); /* 深色半透明背景 */
    flex-direction: column; /* 工具栏在顶部，画布在下方 */
    padding: 0; /* 移除模态框的内边距，以便内容占满 */
    overflow: hidden; /* 防止内部滚动条，画布容器自己处理滚动（如果需要） */
    z-index: 1002; /* 比视频通话UI高一点，但低于纯通知 */
}

.screenshot-editor-toolbar {
    display: flex;
    align-items: center;
    padding: var(--spacing-2) var(--spacing-3);
    background-color: #333; /* 深色工具栏背景 */
    color: var(--text-color-inverted);
    flex-shrink: 0; /* 防止工具栏被压缩 */
    border-bottom: 1px solid #444;
}

.screenshot-tool-btn { /* Base for tools in screenshot editor */
    background: none;
    border: 1px solid transparent; /* 默认无边框，选中时可添加 */
    color: var(--text-color-inverted);
    font-size: 20px; /* 图标大小 */
    padding: var(--spacing-2);
    margin-right: var(--spacing-2);
    border-radius: var(--border-radius);
    cursor: pointer;
    transition: background-color 0.2s ease-out, border-color 0.2s ease-out, opacity 0.2s ease-out;
}

.screenshot-tool-btn:hover:not(.active) {
    background-color: rgba(255, 255, 255, 0.1);
}

.screenshot-tool-btn.active {
    background-color: var(--primary-color);
    border-color: var(--primary-color-dark);
}

.screenshot-tool-color-picker {
    width: 30px; /* 调整大小以适应工具栏 */
    height: 30px;
    padding: 0; /* 移除默认内边距 */
    border: 1px solid #555; /* 边框使其更明显 */
    border-radius: 4px;
    background-color: transparent; /* 背景透明，让颜色块显示 */
    cursor: pointer;
    margin-left: var(--spacing-1);
    margin-right: var(--spacing-3); /* 与其他工具按钮保持一些间距 */
    vertical-align: middle; /* 垂直对齐 */
}
/* 针对 Webkit 核心浏览器（Chrome, Safari, Edge等）自定义颜色选择器的外观 */
.screenshot-tool-color-picker::-webkit-color-swatch-wrapper {
    padding: 0;
}
.screenshot-tool-color-picker::-webkit-color-swatch {
    border: none;
    border-radius: 3px; /* 轻微圆角 */
}
/* 针对 Firefox 浏览器自定义颜色选择器的外观 */
.screenshot-tool-color-picker::-moz-color-swatch {
    border: none;
    border-radius: 3px;
}


.toolbar-spacer {
    flex-grow: 1; /* 将右侧按钮推到最右边 */
}

#confirmScreenshotEditBtn, /* In screenshot editor */
#cancelScreenshotEditBtn { /* In screenshot editor */
    padding: var(--spacing-2) var(--spacing-3); /* 调整按钮大小 */
    margin-left: var(--spacing-2);
    /* .btn class already provides transition */
}

.screenshot-canvas-container {
    flex-grow: 1; /* 占据剩余空间 */
    display: flex;
    align-items: center;
    justify-content: center;
    overflow: auto; /* 如果图片太大，允许滚动查看 */
    padding: var(--spacing-3); /* 给画布一些边距 */
}

#screenshotEditorCanvas {
    display: block;
    max-width: 100%;
    max-height: 100%;
    object-fit: contain; /* 确保整个图像可见 */
    cursor: crosshair; /* 默认光标为十字线，可由工具更改 */
    box-shadow: 0 0 10px rgba(0,0,0,0.5);
}

.custom-context-menu {
    position: fixed;
    z-index: 10000; /* 确保在最顶层 */
    background-color: var(--received-bg-color, #fff);
    border: 1px solid var(--border-color, #ccc);
    border-radius: var(--border-radius, 4px);
    box-shadow: 0 2px 10px rgba(0,0,0,0.2);
    padding: var(--spacing-1, 4px) 0;
    min-width: 120px;
    /* For fade-in effect */
    opacity: 0;
    transform: translateY(10px);
    transition: opacity 0.15s ease-out, transform 0.15s ease-out;
}
.custom-context-menu[style*="display: block"] { /* When JS shows it */
    opacity: 1;
    transform: translateY(0);
}


.context-menu-button {
    display: block;
    width: 100%;
    padding: var(--spacing-2, 8px) var(--spacing-3, 12px);
    border: none;
    background: none;
    color: var(--text-color, #212121);
    text-align: left;
    cursor: pointer;
    font-size: 14px;
    transition: background-color 0.15s ease-out, color 0.15s ease-out;
}

.context-menu-button:hover {
    background-color: var(--hover-bg-color, #f0f0f0);
    color: var(--primary-color, #0088cc);
}

.wechat-pay{
    max-width: 180px;
    margin: 5px auto 10px auto;
    display: block;
    border: 1px solid var(--border-color);
    border-radius: 4px;
}


/* ========================================================================== */
/* 状态与修饰符 (States & Modifiers) - Common / Global */
/* ========================================================================== */

/* --- 交互状态: Hover --- */
.menu-btn:hover,
.header-action-btn:hover,
.close-modal-btn:hover {
    color: var(--primary-color);
}

.search-bar:hover { /* Common search bar hover */
    border-color: #a0a0a0;
}

.icon-btn:hover {
    background-color: var(--hover-bg-color);
    color: var(--primary-color);
}

.btn-primary:hover:not(:disabled),
.btn.btn-action-themed:hover:not(:disabled) {
    background-color: var(--primary-color-dark);
}

.btn-secondary:hover:not(:disabled) {
    background-color: #5a6268;
}

.btn-danger:hover:not(:disabled) {
    background-color: #c82333;
}

.btn-success:hover:not(:disabled) {
    background-color: #3e8e41;
}

.collapsible-header:hover,
.tts-attribution-section .attribution-sub-header:hover { /* Base collapsible hover */
    color: var(--primary-color);
}


/* --- 交互状态: Focus / Focus-Visible --- */
/* Common focus style for various input elements */
.search-bar:focus,
.modal-body input[type="text"]:focus,
.modal-body input[type="password"]:focus,
.modal-body input[type="number"]:focus,
.modal-body textarea:focus,
select.custom-select-native:focus, /* Added for native selects styled like custom ones */
.custom-select:focus-within { /* For custom div-based selects */
    outline: none;
    border-color: var(--primary-color);
    box-shadow: 0 0 0 2px rgba(0, 136, 204, 0.2);
}

/* Focus for switch (different style) */
input:focus + .slider {
    box-shadow: 0 0 0 2px rgba(0, 136, 204, 0.2);
}


/* --- 交互状态: Active --- */
.collapsible-header.active { /* Base collapsible active */
    border-bottom-color: var(--primary-color);
    color: var(--primary-color);
}

.collapsible-header.active .collapse-icon {
    transform: rotate(90deg);
}

.video-call-button.active { /* For video call buttons */
    background: var(--primary-color);
    color: var(--text-color-inverted);
}

/* --- 交互状态: Checked (用于开关) --- */
input:checked + .slider {
    background-color: var(--primary-color);
}

input:checked + .slider::before {
    transform: translateX(22px);
}

/* --- 交互状态: Disabled --- */
.btn:disabled,
.header-action-btn:disabled,
.icon-btn:disabled,
.screenshot-option-btn:disabled, /* From chat-area, but generic enough for core disabled styles */
.screenshot-tool-btn:disabled { /* Screenshot editor tool button */
    background-color: #ccc !important;
    box-shadow: none !important;
    color: #666 !important;
    cursor: not-allowed !important;
    opacity: 0.7 !important;
}

/* Ensure icon buttons' background in disabled state (incl. screenshot tools) */
.icon-btn:disabled,
.screenshot-tool-btn:disabled {
    background-color: transparent !important;
}

/* Hide specific header action buttons when they are disabled (these are in chat-area header) */
#videoCallButtonMain:disabled,
#audioCallButtonMain:disabled,
#screenShareButtonMain:disabled {
    display: none !important;
}


/* --- 功能状态修饰符 (Global ones) --- */
.online-dot {
    display: inline-block;
    flex-shrink: 0;
    width: 8px;
    height: 8px;
    margin-inline-start: 6px;
    border-radius: 50%;
    background-color: var(--accent-color);
    box-shadow: 0 0 3px var(--accent-color);
    vertical-align: middle;
}

.notification.notification-success {
    border-left-color: var(--accent-color);
}
.notification.notification-warning {
    border-left-color: var(--warning-color);
}
.notification.notification-error {
    border-left-color: var(--danger-color);
}

.notification-hide {
    transform: translateX(400px);
    opacity: 0;
}

/* --- 视频通话模式修饰符 (Affects the .video-call-container-main, which is core) --- */
.video-call-container-main.audio-only-mode .video-streams {
    background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="100" height="100" viewBox="0 0 24 24" fill="%23cccccc"><path d="M12 3c-4.97 0-9 4.03-9 9v7c0 1.1.9 2 2 2h4v-8H5v-1c0-3.87 3.13-7 7-7s7 3.13 7 7v1h-4v8h4c1.1 0 2-.9 2-2v-7c0-4.97-4.03-9-9-9z"/></svg>');
    background-position: center;
    background-repeat: no-repeat;
    background-color: #222;
}

.video-call-container-main.audio-only-mode #localVideo,
.video-call-container-main.screen-sharing-mode #localVideo {
    /* display: none !important; -- This can be handled by JS setting srcObject to null and style.display */
    opacity: 0;
    pointer-events: none;
}


/* 画中画 (PiP) 模式 */
.video-call-container-main.pip-mode {
    position: fixed;
    z-index: 1005;
    display: flex;
    flex-direction: column;
    width: clamp(240px, 25vw, 360px);
    height: auto;
    overflow: hidden;
    border: 2px solid var(--primary-color);
    border-radius: 8px;
    background-color: #2c2c2c;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
    cursor: grab;
    aspect-ratio: 16 / 9;
}

.video-call-container-main.pip-mode .video-streams {
    flex-grow: 1;
    min-height: 0;
}

.video-call-container-main.pip-mode #localVideo {
    inset-block-end: 8px;
    inset-inline-end: 8px;
    display: block !important; /* Ensure it's block for PiP */
    opacity: 1; /* Ensure visible */
    pointer-events: auto; /* Ensure interactive */
    width: 30%;
    height: auto;
    border: 1px solid rgba(255, 255, 255, 0.5);
    border-radius: 4px;
    aspect-ratio: 16 / 9;
}

.video-call-container-main.pip-mode .video-call-controls {
    position: relative;
    inset-block-end: auto;
    flex-shrink: 0;
    justify-content: space-around;
    gap: 5px;
    padding: 6px;
    border-radius: 0;
    background-color: rgba(0, 0, 0, 0.6);
}

.video-call-container-main.pip-mode .video-call-controls .video-call-button {
    width: 36px;
    height: 36px;
    margin-inline: 2px;
    font-size: 16px;
}

/* UIManager.js - showFullVideo 相关样式 (for modal-like video viewer) */
.modal-like.video-viewer {
    background-color: rgba(0,0,0,0.9); /* 深色背景以便视频观看 */
}

.modal-close-button.top-right {
    position: absolute;
    top: 10px; /* 调整位置 */
    right: 15px;
    background: rgba(30, 30, 30, 0.7);
    color: white;
    border: none;
    border-radius: 50%;
    width: 35px; /* 稍大一点 */
    height: 35px;
    font-size: 20px;
    line-height: 35px; /* 垂直居中 */
    text-align: center;
    cursor: pointer;
    z-index: 1003; /* 确保在视频控件之上 */
    transition: background-color 0.2s ease-out;
    font-weight: bold;
}
.modal-close-button.top-right:hover {
    background-color: rgba(200, 0, 0, 0.8); /* 悬停时更红 */
}

/* ========================================================================== */
/* 动画与关键帧 (Animations & Keyframes) */
/* ========================================================================== */

@keyframes tts-spin { /* Used by TTS controls in messages & details panel */
    to {
        transform: rotate(360deg);
    }
}

@keyframes spin { /* General spinner animation */
    from {
        transform: rotate(0deg);
    }
    to {
        transform: rotate(360deg);
    }
}

/* --- OPTIMIZED (Performance) ---
* 将昂贵的 box-shadow 动画替换为对 transform 和 opacity 的动画。
* 这个动画现在应用于一个伪元素（::after），而不是按钮本身，从而利用 GPU 加速。
* 这将使脉冲效果极其流畅，几乎零 CPU 消耗。
*/
@keyframes pulse {
    0% {
        transform: scale(0.95);
        opacity: 0.7;
    }
    70% {
        transform: scale(1.6);
        opacity: 0;
    }
    100% {
        transform: scale(0.95);
        opacity: 0;
    }
}

@keyframes notification-in {
    from {
        transform: translateX(400px);
        opacity: 0;
    }
    to {
        transform: translateX(0);
        opacity: 1;
    }
}

@keyframes blink-animation { /* Used by streaming cursor in messages */
    50% {
        opacity: 0;
    }
}

/* ========================================================================== */
/* 菜单标签页样式 (Menu Tab Styles) */
/* ========================================================================== */

.modal-body .menu-tabs {
    display: flex;
    border-bottom: 1px solid var(--border-color);
    margin-bottom: var(--spacing-4);
    flex-wrap: wrap; /* 允许换行 */
    gap: var(--spacing-1);
}

.modal-body .menu-tab-item {
    padding: var(--spacing-2) var(--spacing-3);
    border: none;
    border-bottom: 3px solid transparent;
    background: none;
    cursor: pointer;
    font-size: 14px;
    color: var(--text-color-light);
    transition: color 0.2s ease-out, border-color 0.2s ease-out;
}

.modal-body .menu-tab-item:hover {
    color: var(--text-color);
}

.modal-body .menu-tab-item.active {
    color: var(--primary-color);
    border-bottom-color: var(--primary-color);
    font-weight: 600;
}

.modal-body .menu-tab-content {
    display: none; /* 默认隐藏所有内容面板 */
}

.modal-body .menu-tab-content.active {
    display: block; /* 只显示激活的内容面板 */
    animation: tab-fade-in 0.3s ease-out;
}

@keyframes tab-fade-in {
    from {
        opacity: 0;
        transform: translateY(10px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

/* ========================================================================== */
/* MODIFIED: 优化设置模态框大小 (Optimize Settings Modal Size) */
/* ========================================================================== */

/* 允许主菜单模态框本身可以更高，以容纳展开的选项列表 */
#mainMenuModal .modal-content {
    max-height: 95vh;
}

/* 专门针对主题选择器的选项列表，增大其最大高度 */
#mainMenuModal #themeOptionsContainer {
    max-height: 50vh; /* 使用视口高度单位，更具响应性 */
}


/* ========================================================================== */
/* 新增: AI & API 配置特定样式 (New: AI & API AppSettings Specific Styles) */
/* ========================================================================== */

/* Container for dynamic model input/select */
.api-model-input-container {
    flex-grow: 1;
    min-width: 0; /* Allow shrinking */
    display: flex; /* Ensure it behaves correctly in a flex layout */
}
/* MODIFIED: Removed 'select' styling, as it's replaced by custom-select. Kept 'input' styling. */
.api-model-input-container > input {
    width: 100%; /* Make the input take full width of the container */
    padding: var(--spacing-2);
    border: 1px solid var(--border-color);
    border-radius: 4px;
    background-color: var(--received-bg-color);
    transition: border-color 0.2s ease-out, box-shadow 0.2s ease-out;
    margin-bottom: 0; /* Override generic margin from modal-body input styles */
}
/* MODIFIED: Removed 'select:focus' styling. Kept 'input:focus'. */
.api-model-input-container > input:focus {
    outline: none;
    border-color: var(--primary-color);
    box-shadow: 0 0 0 2px rgba(0, 136, 204, 0.2);
}


/* ========================================================================== */
/* --- ADDED: Styles Moved From Inline --- */
/* ========================================================================== */

.video-call-container-main #audioQualityIndicator {
    position: absolute;
    top: 10px;
    left: 10px;
    z-index: 3;
    display: none; /* JS will toggle display */
}

#newContactGroupModal #newGroupIdInput {
    margin-top: 10px;
}

#openSourceInfoModal .modal-body {
    text-align: center;
}

#openSourceInfoModal img[src$="/contact.png"] {
    max-width: 150px;
    margin: 10px auto;
    display: block;
    border: 1px solid var(--border-color);
}

#openSourceInfoModal .modal-body p:has(> #openSourceModalTimer) {
    font-size: 0.9em;
    color: var(--text-color-light);
}

.screenshot-editor-toolbar #markColorPicker {
    display: none; /* Initially hidden, shown when draw tool is active */
}


/* ========================================================================== */
/* 响应式设计 (Responsive Design) - Global Layout Changes */
/* ========================================================================== */

@media screen and (max-width: 900px) {
    /* Hides details panel by default, JS shows it as overlay */
    .details-panel {
        /* display: none; -- Handled by transition/transform in details-panel.css for sliding */
    }

    .app-container.show-details .details-panel {
        position: absolute; /* This might be overridden by details-panel.css if it uses absolute for sliding */
        z-index: 20;
        inset-block-start: 0;
        inset-inline-end: 0;
        display: flex; /* Ensure flex when shown by class */
        height: 100%;
        box-shadow: -2px 0 10px rgba(0, 0, 0, 0.15);
    }
}

@media screen and (max-width: 768px) {
    .app-container {
        flex-direction: column;
        height: 100vh;
        height: 100dvh;
        max-height: 100dvh;
        border-radius: 0;
    }

    .sidebar-nav { /* Takes full screen initially on mobile */
        width: 100%;
        height: 100%;
        border-inline-end: none;
    }

    .chat-area { /* Hidden initially on mobile, shown when a chat is active */
        display: none;
        width: 100%;
        height: 100%;
    }

    .app-container.chat-view-active .sidebar-nav {
        display: none;
    }

    .app-container.chat-view-active .chat-area {
        display: flex;
    }

    /* Details panel overlay behavior on small screens (already partly handled by 900px breakpoint) */
    .details-panel {
        /*
    position: fixed;
    z-index: 20;
    inset-block-start: 0;
    inset-inline-end: -300px; /* Initial hide off-screen (for sliding animation if any)
    width: 100%;
    max-width: 300px; /* Limit width on mobile
    height: 100%;
    */
        /* display: flex; is set by .app-container.show-details */
        /* Most of this is now controlled by details-panel.css and its transform based animation */
        max-width: 300px; /* Still useful to limit width on mobile when it slides in */
    }

    .app-container.show-details .details-panel {
        /* inset-inline-end: 0; /* Slide in - Handled by transform in details-panel.css */
        display: flex; /* Ensure it's flex when shown */
    }

    /* Video call UI adjustments for small screens */
    .video-call-container-main #localVideo {
        width: 90px !important;
        height: 135px !important;
        inset-block-end: 70px !important;
        inset-inline-end: 10px !important;
    }

    .video-call-container-main .video-call-controls {
        gap: 10px !important;
    }

    .video-call-button {
        width: 45px !important;
        height: 45px !important;
        font-size: 18px !important;
    }

    /* Screenshot editor adjustments for small screens */
    .screenshot-editor-toolbar {
        padding: var(--spacing-1) var(--spacing-2);
        overflow-x: auto; /* Allow horizontal scroll if tools overflow */
    }
    .screenshot-tool-btn {
        font-size: 18px;
        padding: var(--spacing-1);
    }
    .screenshot-tool-color-picker {
        width: 28px;
        height: 28px;
        margin-right: var(--spacing-2);
    }
    #confirmScreenshotEditBtn,
    #cancelScreenshotEditBtn {
        padding: var(--spacing-1) var(--spacing-2);
        font-size: 13px;
    }
    .screenshot-canvas-container {
        padding: var(--spacing-1);
    }
}