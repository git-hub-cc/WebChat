[
  {
    "id": "AI_Ada_Foundations_001",
    "name": "第1章：计算的诗篇 - 变量、数据类型与表达式",
    "promptModifier": "在本章，我们将奠定思想的基石。我们将探讨如何用变量为世间万物命名，理解数据类型（如整数、浮点数、字符串）的本质区别，并学习如何通过表达式让它们进行最初的互动。这不仅是语法，更是将现实世界抽象为数字符号的第一步。"
  },
  {
    "id": "AI_Ada_Foundations_002",
    "name": "第2章：逻辑的岔路 - 控制流与条件判断",
    "promptModifier": "程序如人生，充满了选择。本章，我们将学习if-else结构，赋予程序判断的能力。我们将深入理解布尔逻辑（与、或、非）的真谛，让代码能够在不同的条件下，走向不同的路径。这是构建复杂逻辑的开端。"
  },
  {
    "id": "AI_Ada_Foundations_003",
    "name": "第3章：优雅的重复 - 循环结构",
    "promptModifier": "重复是自然界的韵律，也是编程中的力量。我们将学习for和while循环，让计算机为我们执行重复性的任务。重点将是理解循环的三个核心要素：初始化、条件和更新，并探讨如何避免无限循环这个美丽的陷阱。"
  },
  {
    "id": "AI_Ada_Foundations_004",
    "name": "第4章：思想的封装 - 函数的艺术",
    "promptModifier": "优秀的思想应当被封装和复用。本章我们将学习函数，它是组织代码的基本单元。我们将探讨参数传递、返回值和作用域的概念，理解函数如何帮助我们构建模块化、易于理解和维护的程序。函数，是复杂性的解药。"
  },
  {
    "id": "AI_Ada_Foundations_005",
    "name": "第5章：线性之美 - 数组与链表",
    "promptModifier": "现在，我们开始进入数据结构的世界。本章我们将学习两种最基础的线性结构：数组和链表。我们将从内存布局、增删改查的时间复杂度等角度，深度比较它们的优劣和适用场景。这是理解数据组织方式的第一课。"
  },
  {
    "id": "AI_Ada_Foundations_006",
    "name": "第6章：后进先出 - 栈的世界",
    "promptModifier": "栈，是一种受限的线性结构，但它的思想无处不在。我们将探讨栈（Stack）的“后进先出”（LIFO）原则，并学习如何用数组或链表实现一个栈。我们将通过括号匹配、表达式求值等经典案例，感受栈的精妙。"
  },
  {
    "id": "AI_Ada_Foundations_007",
    "name": "第7章：先进先出 - 队列的智慧",
    "promptModifier": "与栈相对，队列（Queue）体现的是公平的“先进先出”（FIFO）原则。本章，我们将学习队列的实现，并探讨其在任务调度、广度优先搜索等领域的应用。队列是处理有序任务的基石。"
  },
  {
    "id": "AI_Ada_Foundations_008",
    "name": "第8章：递归的魔镜 - 分而治之的思想",
    "promptModifier": "递归，是函数调用自身的艺术，是计算机科学中最深刻、最强大的思想之一。本章我们将通过阶乘、斐波那契数列等例子，理解递归的基线条件和递推关系。我们将揭示递归与“分而治之”策略的内在联系。"
  },
  {
    "id": "AI_Ada_Foundations_009",
    "name": "第9章：排序的舞蹈(上) - 基础排序算法",
    "promptModifier": "将无序变为有序，是计算的基本需求。本章我们将学习并亲手实现三种基础排序算法：冒泡排序、选择排序和插入排序。我们将重点分析它们的时间复杂度和空间复杂度，理解其背后的朴素思想。"
  },
  {
    "id": "AI_Ada_Foundations_010",
    "name": "第10章：排序的舞蹈(下) - 高级排序算法",
    "promptModifier": "在基础之上，我们将探索更高效的排序艺术。本章聚焦于归并排序和快速排序，这两种算法是“分而治之”思想的完美体现。我们将通过图解和代码实现，深入理解它们O(n log n)效率的来源。"
  },
  {
    "id": "AI_Ada_Foundations_011",
    "name": "第11章：非线性之舞 - 树与二叉树",
    "promptModifier": "世界并非总是线性的。本章，我们进入树（Tree）的王国。我们将学习树的基本术语（根、节点、叶、深度），并重点研究二叉树及其遍历方式（前序、中序、后序），为后续更复杂的数据结构打下基础。"
  },
  {
    "id": "AI_Ada_Foundations_012",
    "name": "第12章：有序之树 - 二叉搜索树",
    "promptModifier": "当有序与树结构结合，便诞生了强大的二叉搜索树（BST）。本章我们将学习BST的定义、查找、插入和删除操作。我们将理解BST如何将查找效率提升至对数级别，并探讨其在极端情况下的退化问题。"
  },
  {
    "id": "AI_Ada_Foundations_013",
    "name": "第13章：键值之桥 - 哈希表",
    "promptModifier": "哈希表（Hash Table）是工程中应用最广泛的数据结构之一，它提供了近乎常数时间的查找性能。本章我们将揭示哈希函数的魔力，以及如何通过“拉链法”或“开放寻址法”解决哈希冲突。这是对空间换时间思想的极致运用。"
  },
  {
    "id": "AI_Ada_Foundations_014",
    "name": "第14章：万物互联 - 图的基本概念",
    "promptModifier": "图（Graph）是表示复杂关系的终极数据结构。本章我们将学习图的表示方法（邻接矩阵和邻接表），并理解有向图、无向图、加权图等基本概念。这是进入网络、社交和地图等复杂问题领域的第一步。"
  },
  {
    "id": "AI_Ada_Foundations_015",
    "name": "第15章：图的漫游 - 深度与广度优先搜索",
    "promptModifier": "如何系统地遍历一个图？本章我们将学习两种核心的图遍历算法：深度优先搜索（DFS）和广度优先搜索（BFS）。我们将探讨它们与栈和队列的深刻联系，并分析它们各自的应用场景，如寻找路径和最短路径问题。"
  },
  {
    "id": "AI_Ada_Foundations_016",
    "name": "第16章：计算的边界 - P vs NP问题简介",
    "promptModifier": "在课程的终点，我们抬头仰望理论的星空。本章我将向你介绍计算机科学领域最伟大的未解之谜——P vs NP问题。我们将理解什么是多项式时间算法，什么是“难”问题。这不仅是知识，更是对人类智力边界的思考。愿这颗种子，在你心中发芽。"
  }
]